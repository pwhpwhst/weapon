ele_begin : condition	{$$=$1;}
assignment-expression : 'number'	{Integer* num=new Integer(atoi(($1).c_str()));$$=num;}
declarator : 'identifier'	{Word* w=new Word($1,Tag::ID);$$=w;}
condition : type-specifier-seq declarator '=' assignment-expression	{Token* tp1=$1;Token* tp2=$2;Word* tpp2=new Word((const Word&)(*tp2)); Id *id=new Id(tpp2,(Type*)tp1,Id::POS); Id::POS+=4; env.put(tp2,id);}
type-specifier-seq : type-specifier	{$$=$1;}
type-specifier-seq : type-specifier type-specifier-seq	{$2.next=$1;$$=$2;}
type-specifier : 'simple-type-specifier'	{Type* type=new Type($1,Tag::BASIC,4);$$=type;}