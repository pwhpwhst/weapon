参考 http://www.runoob.com/docker/docker-install-nginx.html

====================================
一、创建镜像

cd /home/docker

mkdir jdk8EnvBuild

cd jdk8EnvBuild

//将 jdk-8u171-linux-x64.gz 通过winscp放到 /home/docker/jdk8EnvBuild 下
//将 Dockerfile 放到jdk8EnvBuild下



// docker pull ubuntu:artful	(不用操作)

// docker images	(不用操作)

docker build  -t pwh_jdk8:1.0.0 .



配置
//Oracle VM VirtualBox→“目标虚拟机”→“设置”→“网络”→“高级”→端口转发
127.0.0.1 50102 50102

//Oracle VM VirtualBox→“目标虚拟机”→“设置”→“共享文件夹”
共享文件夹路径 E:\dockerShare
共享文件夹名称 dockerShare
自动挂载
固定分配

====================================
二、创建容器



docker images

//创建自定义网络 begin
docker network create --subnet=172.18.0.0/16 mynetwork

docker network ls
//创建自定义网络 end

//创建容器并分配ip begin
docker create -it --net mynetwork --ip 172.18.0.2 --name ubuntu_jdk pwh_jdk8:1.0.0	//创建容器并分配ip



docker ps -a


docker start ubuntu_jdk


docker exec -it ubuntu_jdk bash

//安装必要的网络工具 begin

apt-get update

apt-get install net-tools # 安装	ifconfig

apt-get install ssh

apt-get install iputils-ping

apt-get install vim

//安装必要的网络工具 end

//设置root密码 begin
passwd root
059030849
//设置root密码 end

// 生成密钥对 begin
ssh-keygen -t rsa *3
// 生成密钥对 end



vi /etc/hosts
172.18.0.1 default
172.18.0.2 slaver1

cp /etc/hosts /etc/hosts.temp

//注册公钥到宿主机 begin
ssh-copy-id -i /root/.ssh/id_rsa.pub docker@default
//注册公钥到宿主机 end

vi /etc/ssh/sshd_config
RSAAuthentication yes #启用 RSA 认证
PubkeyAuthentication yes #启用公钥私钥配对认证方式
AuthorizedKeysFile /root/.ssh/authorized_keys #公钥文件路径（和上面生成的文件同）
PermitRootLogin yes #root能使用ssh登录

/etc/init.d/ssh start

sync

exit

=========================================================
三、宿主机配置

sudo vi /etc/hosts
172.18.0.2 ubuntu_jdk


touch /dockerShare/ubuntu_jdk/etc/hosts.temp
mkdir -p /dockerShare/ubuntu_jdk/etc
sudo cp /etc/hosts /dockerShare/ubuntu_jdk/etc/hosts.temp

sync


四、端口映射配置

//Oracle VM VirtualBox→“目标虚拟机”→“设置”→“网络”→“高级”→端口转发
//子系统端口是指 192.168.99.100的端口，

127.0.0.1 50102  50102

在docker机里面：

ssh -L 0.0.0.0:50102:172.18.0.2:22 docker@default






五、 验证

在windows上

telnet 127.0.0.1 50102


========================================================
重新启动


sudo cp /dockerShare/ubuntu_jdk/etc/hosts.temp /etc/hosts
docker start ubuntu_jdk


docker exec -it ubuntu_jdk bash
cp /etc/hosts.temp /etc/hosts
/etc/init.d/ssh start


ssh -L 0.0.0.0:50102:172.18.0.2:22 docker@default