#ifndef __GRID
#define __GRID

#include<string>
using namespace std;

class Grid
{
	private:
		unsigned char *content;
		std::size_t *use;

	public:

		Grid(){
			this->content=new unsigned char(0);
			use=new std::size_t(1);
			cout<<*use;
		};

		Grid(unsigned char content)
		{
			this->content=new unsigned char(content);
			use=new std::size_t(1);
		}

		Grid(const Grid& grid)
		{
			++*grid.use;
			use=grid.use;
			content=grid.content;
		}

		Grid& operator =(const Grid& grid)
		{
			++*grid.use;
			if(--*use==0){
				delete use;
				delete content;
			}
			use=grid.use;
			content=grid.content;
			return *this;
		}

		~Grid()
		{
			if(--*use==0){
				delete use;
				delete content;
			}
		}

};

#endif